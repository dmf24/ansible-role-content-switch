# {{ ansible_managed }}
{# Macro definitions #}
{% macro http_frontend(frontend) %}
server {
       listen 80;
       server_name {{ frontend.name }};
       location / {
{% if frontend.allow_networks is defined %}
{% for allow_network in frontend.allow_networks %}
                allow {{ allow_network }};
{% endfor %}
                deny all;
{% endif %}
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto http;
                proxy_set_header Host $http_host;
                proxy_pass http://{{ frontend.instance }};
                proxy_redirect off;
       }
}
{% endmacro %}
{% macro https_frontend(frontend) %}
server {
        listen 443;
        server_name {{ frontend.name }};

	ssl on;
        ssl_certificate {{ certsdir }}/{{ frontend.certificate }}/{{ frontend.certificate }}.crt;
        ssl_certificate_key {{ certsdir }}/{{ frontend.certificate }}/{{ frontend.certificate }}.key;

        ssl_session_timeout 5m;

        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
        ssl_prefer_server_ciphers on;

        location / {
{% if frontend.allow_networks is defined %}
{% for allow_network in frontend.allow_networks %}
                allow {{ allow_network }};
{% endfor %}
                deny all;
{% endif %}
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         	proxy_set_header X-Forwarded-Proto https;
                proxy_set_header Host $http_host;
                proxy_pass http://{{ frontend.instance }};
                proxy_redirect off;
       }
}
{% endmacro %}
{#### MAIN SECTION ####}
{% for backend in nginx_backends %}
upstream {{ backend.name }} {
{% for serv_prt in backend.endpoints %}
    server {{ serv_prt }};
{% endfor %}
}
{% endfor %}

{% for frontend in sites %}
{% if frontend.protocol is defined %}
{% if frontend.protocol == 'https' %}
server {
       listen 80;
       server_name {{ frontend.name }};
       rewrite ^(.*)$ https://$host$1 permanent;
}
{% endif %}
{% if frontend.protocol == 'http' or frontend.protocol == 'http_and_https' %}
{{   http_frontend(frontend) }}
{% endif %}
{% if frontend.protocol == 'https' or frontend.protocol == 'http_and_https' %}
{{   https_frontend(frontend) }}
{% endif %}
{% else %} {# frontend.protocol is not defined #}
{{   http_frontend(frontend) }}
{% endif %}{# frontend.protocol is defined #}
{% endfor %}
